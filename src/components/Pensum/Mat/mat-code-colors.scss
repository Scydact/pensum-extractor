// How to use:
// 1. Each color is defined as a sass varible
// 2. Variations are made for normal, hover, active, disabled, table-odd, table-even, table-hover
// 3. Each is placed into a var for its corresponding class, as mat-bg and mat-fg variables.
$colors: (
  "default": hsl(204, 100%, 50%),
  "passed": hsl(120, 100%, 50%),
  "course": hsl(40, 100%, 50%),
  "missing": hsl(0, 100%, 50%),
);

@function create-color($base, $ld) {
  $h: hue($base);
  $s: saturation($base);
  $l: lightness($base);
  $a: opacity($base);

  $color: (
    "normal":     hsla($h, $s * (0.5 + 1.3*$ld), $l + 0.95*$ld, $a),
    "hover":      hsla($h, $s * (0.4 + 0.2*$ld), 0.80*$l  + $ld, $a),
    "active":     hsla($h, $s * (1.0 + 0.0*$ld), 0.85*$l + 0.5*$ld, $a),
    "disabled":   hsla($h, $s * (0.2 + 0.5*$ld), $l + $ld, $a),
    "table-odd":  hsla($h, $s, $l, $a * 0.20),
    "table-even": hsla($h, $s, $l, $a * 0.30),
    "table-hover":hsla($h, $s, $l, $a * 0.5),
    "border":     hsla($h, $s * (0.5 + 1.3*$ld), 0.85*$l, $a),
  );

  @return $color;
}

@mixin create-css-vars($name, $color, $mat-fg, $light-delta) {
  $parsed: create-color($color, $light-delta);

  .#{$name} {
    --mat-bg: #{map-get($parsed, "normal")};
    --mat-fg: #{$mat-fg};
    --mat-fg-rgb: #{red($mat-fg)},#{green($mat-fg)},#{blue($mat-fg)};

    --mat-bg-hover: #{map-get($parsed, "hover")};
    --mat-bg-active: #{map-get($parsed, "active")};
    --mat-bg-disabled: #{map-get($parsed, "disabled")};
    --mat-border-color: #{map-get($parsed, "border")};
    --rowmat-bg-odd: #{map-get($parsed, "table-odd")};
    --rowmat-bg-even: #{map-get($parsed, "table-even")};
    

    // Recommended to set this manually
    // &:hover, &.hover {
    //   --mat-bg: var(--mat-bg-hover);
    // }

    &:active, &.active {
      --mat-bg: var(--mat-bg-active);
    }

    &:disabled, &.disabled, &.not-active {
      --mat-bg: var(--mat-bg-disabled);
    }
    
    &.row-mat {
      --rowmat-bg: var(--rowmat-bg-odd);
      &.even {
        --rowmat-bg: var(--rowmat-bg-even);
      }
    }

  }

  // Manual override classes
  .table-hover-#{$name}:hover {
    --rowmat-hover-bg: #{map-get($parsed, "table-hover")};
  }
  .mat-hover-#{$name}:hover {
    --mat-hover-bg: #{map-get($parsed, "hover")};
  }
}


// Default cases
:root {
  --rowmat-bg-odd: hsla(0,0%,50%,0);
  --rowmat-bg-even: hsla(0,0%,50%,0.12);
}

.row-mat {
  --rowmat-bg: var(--rowmat-bg-odd);
  &.even {
    --rowmat-bg: var(--rowmat-bg-even);
  }
}


// Light mode
@each $key, $color in $colors {
  @include create-css-vars(#{$key}, $color, black, 32%);
}


// Dark mode
.color-scheme-dark {
  @each $key, $color in $colors {
    @include create-css-vars(#{$key}, $color, white, 0%);
  }
}